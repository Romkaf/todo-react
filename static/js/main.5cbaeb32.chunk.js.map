{"version":3,"sources":["components/header/header.js","components/todo-list/todo-item/todo-item.js","components/todo-list/todo-list.js","components/footer/counter/counter.js","components/footer/filter/filter.js","components/footer/btn-clear-completed/btn-clear-completed.js","components/footer/footer.js","components/app/app.js","index.js"],"names":["Header","todoInputHandler","evt","keyCode","ENTER","type","validateValue","target","value","trim","replace","props","addTodo","this","todosArray","selectAll","visibility","length","opacity","every","it","completed","checked","className","id","onClick","readOnly","style","htmlFor","placeholder","onBlur","onKeyDown","PureComponent","ESC","TodoItem","state","visibilityElement","isEditing","onTaskDblClick","setState","textContent","parentNode","classList","add","finishTodoEditing","input","insertText","title","deleteEmptyTask","editTodo","remove","deleteTodo","error","onChangeHandler","selectTodo","klass","onChange","autoFocus","onDoubleClick","TodoList","todos","map","key","text","Counter","activeTodosAmount","Filter","buttons","filter","changeFilter","BtnClearCompleted","completedTodosAmount","deleteCompleted","Footer","App","filterTodos","newTodo","createTodo","deleteCompletedTodo","selectAllTodo","Object","assign","setLocalStorage","stateName","localStorage","setItem","JSON","stringify","loadLocalStorage","parse","getItem","activeTodoCount","completedTodoCount","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cbaeb32.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./header.scss\";\n\nexport default class Header extends PureComponent {\n  todoInputHandler = (evt) => {\n    if (evt.keyCode === keyCode.ENTER || evt.type === \"blur\") {\n      const validateValue = evt.target.value.trim().replace(/\\s+/g, \" \");\n      if (validateValue) this.props.addTodo(validateValue);\n      evt.target.value = \"\";\n    }\n  };\n\n  render() {\n    const { todosArray, selectAll } = this.props;\n    const visibility = todosArray.length > 0 ? \"visible\" : \"hidden\";\n    const opacity = todosArray.every((it) => it.completed) ? 1 : 0.2;\n    const checked = todosArray.every((it) => it.completed) ? \"ckecked\" : \"\";\n\n    return (\n      <header className=\"todo-header\">\n        <h1 className=\"todo-header__title\">ToDo</h1>\n        <input\n          className=\"todo-header__choice-all\"\n          id=\"choice-all\"\n          type=\"checkbox\"\n          onClick={selectAll}\n          checked={checked}\n          readOnly\n        />\n        <label\n          style={{ opacity: opacity, visibility: visibility }}\n          htmlFor=\"choice-all\"\n        >\n          &#8249;\n        </label>\n        <input\n          className=\"todo-header__input\"\n          type=\"text\"\n          placeholder=\"Что надо сделать?\"\n          onBlur={this.todoInputHandler}\n          onKeyDown={this.todoInputHandler}\n        />\n      </header>\n    );\n  }\n}\n\nexport const keyCode = {\n  ENTER: 13,\n  ESC: 27,\n};\n\nHeader.propTypes = {\n  addTodo: PropTypes.func,\n  todosArray: PropTypes.array,\n  selectAll: PropTypes.func,\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./todo-item.scss\";\nimport { keyCode } from \"../../header/header\";\n\nexport default class TodoItem extends PureComponent {\n  state = {\n    visibilityElement: \"visible\",\n    isEditing: false,\n    value: \"\",\n  };\n\n  onTaskDblClick = (evt) => {\n    this.setState({\n      visibilityElement: \"hidden\",\n      isEditing: true,\n      value: evt.target.textContent,\n    });\n\n    evt.target.parentNode.classList.add(\"todo-item--editing\");\n  };\n\n  finishTodoEditing = (evt) => {\n    if (\n      evt.keyCode === keyCode.ENTER ||\n      evt.type === \"blur\" ||\n      evt.keyCode === keyCode.ESC\n    ) {\n      const input = evt.target;\n      if (!this.state.isEditing) return;\n      const insertText =\n        evt.keyCode === keyCode.ESC\n          ? this.props.title\n          : input.value.trim().replace(/\\s+/g, \" \");\n\n      if (this.deleteEmptyTask(evt, insertText)) return;\n      this.props.editTodo(insertText);\n      input.parentNode.classList.remove(\"todo-item--editing\");\n      this.setState({ visibilityElement: \"visible\", isEditing: false });\n    }\n  };\n\n  deleteEmptyTask = (evt, insertText) => {\n    if (!insertText) {\n      try {\n        evt.target.parentNode.remove();\n        this.props.deleteTodo();\n        return \"return\";\n      } catch (error) {\n        return;\n      }\n    }\n  };\n\n  onChangeHandler = (evt) => {\n    this.setState({ value: evt.target.value });\n  };\n\n  render() {\n    const { title, completed, selectTodo, deleteTodo } = this.props;\n    const klass = completed === true ? \"todo-item--completed\" : \"\";\n    const checked = completed === true ? true : false;\n    const visibility = { visibility: this.state.visibilityElement };\n\n    return (\n      <div className={`todo-item ${klass}`}>\n        <input\n          className=\"todo-item__choice\"\n          type=\"checkbox\"\n          style={visibility}\n          onClick={selectTodo}\n          checked={checked}\n          readOnly\n        />\n        <label style={visibility}>&#10003;</label>\n        {this.state.isEditing ? (\n          <input\n            className=\"todo-item__task\"\n            onKeyDown={this.finishTodoEditing}\n            onBlur={this.finishTodoEditing}\n            value={this.state.value}\n            onChange={this.onChangeHandler}\n            autoFocus\n          />\n        ) : (\n          <span className=\"todo-item__task\" onDoubleClick={this.onTaskDblClick}>\n            {title}\n          </span>\n        )}\n        {/* eslint-disable-next-line */}\n        <button\n          className=\"todo-item__delete\"\n          style={visibility}\n          onClick={deleteTodo}\n        >\n          &#10060;\n        </button>\n      </div>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string,\n  completed: PropTypes.bool,\n  deleteTodo: PropTypes.func,\n  editTodo: PropTypes.func,\n  selectAll: PropTypes.func,\n};\n","import React from \"react\";\nimport TodoItem from \"./todo-item/todo-item\";\nimport PropTypes from \"prop-types\";\n\nconst TodoList = ({ todosArray, selectTodo, deleteTodo, editTodo }) => {\n  const todos = todosArray.map((it) => {\n    return (\n      <li key={it.id}>\n        <TodoItem\n          title={it.title}\n          completed={it.completed}\n          selectTodo={() => selectTodo(it.id)}\n          deleteTodo={() => deleteTodo(it.id)}\n          editTodo={(text) => editTodo(it.id, text)}\n        />\n      </li>\n    );\n  });\n\n  return <ul className=\"todo-list\">{todos}</ul>;\n};\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todosArray: PropTypes.array,\n  deleteTodo: PropTypes.func,\n  editTodo: PropTypes.func,\n  selectAll: PropTypes.func,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./counter.scss\";\n\nconst Counter = ({ activeTodosAmount }) => {\n  return (\n    <span className=\"counter\">\n      Осталось заданий:<b>{activeTodosAmount}</b>\n    </span>\n  );\n};\n\nexport default Counter;\n\nCounter.propTypes = {\n  activeTodosAmount: PropTypes.number,\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./filter.scss\";\n\nexport default class Filter extends PureComponent {\n  buttons = [\n    { title: \"Все\", filter: \"all\" },\n    { title: \"Активные\", filter: \"active\" },\n    { title: \"Завершенные\", filter: \"completed\" },\n  ];\n\n  render() {\n    const { changeFilter, filter } = this.props;\n    const buttons = this.buttons.map((it) => {\n      const klass = it.filter === filter ? \"filter__btn--active\" : \"\";\n\n      return (\n        <button\n          className={`filter__btn ${klass}`}\n          type=\"button\"\n          key={it.filter}\n          onClick={() => changeFilter(it.filter)}\n        >\n          {it.title}\n        </button>\n      );\n    });\n\n    return <div className=\"filter\">{buttons}</div>;\n  }\n}\n\nFilter.propTypes = {\n  changeFilter: PropTypes.func,\n  filter: PropTypes.string,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./btn-clear-completed.scss\";\n\nconst BtnClearCompleted = ({ completedTodosAmount, deleteCompleted }) => {\n  const visibility = completedTodosAmount > 0 ? \"visible\" : \"hidden\";\n\n  return (\n    <button\n      className=\"btn-clear-completed\"\n      style={{ visibility: visibility }}\n      onClick={deleteCompleted}\n    >\n      Удалить завершенные\n    </button>\n  );\n};\n\nexport default BtnClearCompleted;\n\nBtnClearCompleted.propTypes = {\n  completedTodosAmount: PropTypes.number,\n  deleteCompleted: PropTypes.func,\n};\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./footer.scss\";\nimport Counter from \"./counter/counter\";\nimport Filter from \"./filter/filter\";\nimport BtnClearCompleted from \"./btn-clear-completed/btn-clear-completed\";\n\nexport default class Footer extends PureComponent {\n  render() {\n    const {\n      activeTodosAmount,\n      completedTodosAmount,\n      changeFilter,\n      filter,\n      deleteCompleted,\n    } = this.props;\n\n    return (\n      <footer className=\"todo-footer\">\n        <Counter activeTodosAmount={activeTodosAmount} />\n        <Filter changeFilter={changeFilter} filter={filter} />\n        <BtnClearCompleted\n          completedTodosAmount={completedTodosAmount}\n          deleteCompleted={deleteCompleted}\n        />\n      </footer>\n    );\n  }\n}\n\nFooter.propTypes = {\n  completedTodosAmount: PropTypes.number,\n  allTodosAmount: PropTypes.number,\n  activeTodosAmount: PropTypes.number,\n  changeFilter: PropTypes.func,\n  filter: PropTypes.string,\n  deleteCompleted: PropTypes.func,\n};\n","import React, { PureComponent } from \"react\";\nimport Header from \"../header/header\";\nimport TodoList from \"../todo-list/todo-list\";\nimport Footer from \"../footer/footer\";\nimport \"./app.scss\";\n\nexport default class App extends PureComponent {\n  state = {\n    todosArray: [],\n    filter: \"all\",\n  };\n\n  id = 1;\n\n  createTodo(title) {\n    return {\n      title,\n      id: this.id++,\n      completed: false,\n    };\n  }\n\n  changeFilter = (filter) => {\n    this.setState({\n      filter: filter,\n    });\n  };\n\n  filterTodos = (todos, filter) => {\n    switch (filter) {\n      case \"all\":\n        return todos;\n      case \"active\":\n        return todos.filter((it) => !it.completed);\n      case \"completed\":\n        return todos.filter((it) => it.completed);\n      default:\n        return todos;\n    }\n  };\n\n  addTodo = (text) => {\n    const newTodo = this.createTodo(text);\n    this.setState(({ todosArray }) => {\n      return {\n        todosArray: [...todosArray, newTodo],\n      };\n    });\n  };\n\n  deleteTodo = (id) => {\n    this.setState(({ todosArray }) => {\n      return {\n        todosArray: todosArray.filter((it) => !(it.id === id)),\n      };\n    });\n  };\n\n  deleteCompletedTodo = () => {\n    this.setState(({ todosArray }) => {\n      return {\n        todosArray: todosArray.filter((it) => !it.completed),\n      };\n    });\n  };\n\n  selectTodo = (id) => {\n    this.setState(({ todosArray }) => {\n      return {\n        todosArray: todosArray.map((it) => {\n          if (it.id === id) {\n            it.completed = !it.completed;\n          }\n          return it;\n        }),\n      };\n    });\n  };\n\n  editTodo = (id, text) => {\n    this.setState(({ todosArray }) => {\n      return {\n        todosArray: todosArray.map((it) => {\n          if (it.id === id) {\n            it.title = text;\n          }\n          return it;\n        }),\n      };\n    });\n  };\n\n  selectAllTodo = () => {\n    this.setState(({ todosArray }) => {\n      let newArray;\n      if (todosArray.every((it) => it.completed === true)) {\n        newArray = todosArray.map((it) =>\n          Object.assign(it, { completed: false })\n        );\n      } else {\n        newArray = todosArray.map((it) =>\n          Object.assign(it, { completed: true })\n        );\n      }\n      return {\n        todosArray: newArray,\n      };\n    });\n  };\n\n  setLocalStorage = (stateName) => {\n    localStorage.setItem(\"todos\", JSON.stringify(stateName));\n  };\n\n  loadLocalStorage = () => {\n    this.setState({\n      todosArray: JSON.parse(localStorage.getItem(\"todos\")) || [],\n    });\n  };\n\n  componentDidMount() {\n    this.loadLocalStorage();\n  }\n\n  componentDidUpdate() {\n    const { todosArray } = this.state;\n    this.setLocalStorage(todosArray);\n    this.id =\n      todosArray.length === 0 ? 1 : todosArray[todosArray.length - 1].id + 1;\n  }\n\n  render() {\n    const { todosArray, filter } = this.state;\n    const activeTodoCount = todosArray.filter((it) => it.completed === false)\n      .length;\n    const completedTodoCount = todosArray.length - activeTodoCount;\n    const visibleTodos = this.filterTodos(todosArray, filter);\n\n    return (\n      <div className=\"todo-app\">\n        <Header\n          addTodo={this.addTodo}\n          todosArray={todosArray}\n          selectAll={this.selectAllTodo}\n        />\n        <main>\n          <TodoList\n            todosArray={visibleTodos}\n            selectTodo={this.selectTodo}\n            deleteTodo={this.deleteTodo}\n            editTodo={this.editTodo}\n          />\n        </main>\n        {todosArray.length > 0 && (\n          <Footer\n            activeTodosAmount={activeTodoCount}\n            completedTodosAmount={completedTodoCount}\n            changeFilter={this.changeFilter}\n            filter={filter}\n            deleteCompleted={this.deleteCompletedTodo}\n          />\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/app/app\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}